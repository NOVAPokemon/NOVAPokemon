dockerize_version: v0.6.1

## prefixes
dockerize:
  http_prefix: "http : //"
  tcp_prefix: "tcp : //"
  wait_flag: "-wait"
  wait_timeout_flag: "-timeout 60s"
  retry_interval_flag: "-wait-retry-interval 5s"
  default_flags: "$wait_timeout_flag $retry_interval_flag"

  ## wait flags
  wait_auth: "$wait_flag $http_prefix$auth_name:$auth_port"
  wait_battles: "$wait_flag $http_prefix$battles_name:$battles_port"
  wait_gym: "$wait_flag $http_prefix$gym_name:$gym_port"
  wait_location: "$wait_flag $http_prefix$location_name:$location_port"
  wait_microtransactions: "$wait_flag $http_prefix$microtransactions_name:$microtransactions_port"
  wait_notifications: "$wait_flag $http_prefix$notifications_name:$notifications_port"
  wait_store: "$wait_flag $http_prefix$store_name:$store_port"
  wait_trades: "$wait_flag $http_prefix$trades_name:$trades_port"
  wait_trainers: "$wait_flag $http_prefix$trainers_name:$trainers_port"

kubernetes-dashboard:
  service:
    enableSkipLogin: true
  enableInsecureLogin: true
  enableSkipLogin: true
  serviceAccount:
    name: admin
  rbac:
    create: true
    clusterAdminRole: true

kafka:
  replicaCount: 3
  defaultReplicationFactor: 3
  offsetsTopicReplicationFactor: 3
  transactionStateLogReplicationFactor: 3
  transactionStateLogMinIsr: 3
  persistence:
    enabled: false
  readinessProbe:
  zookeeper:
    persistence:
      enabled: false
    readinessProbe:
      enabled: false


global:
  api_configmap:
    name: "services-api"
  database:
    prefix: "novapokemon"
    user: "root"
    mongodbRootPassword: "secretpassword"

  services:
    auth:
      image: "novapokemon/authentication:latest"
      name: "authentication"
      port: 8001
      n_replicas: 2
      serviceName: "authentication-service"
      databaseName: "usersdb"
      databasePort: 27017

    battles:
      name: "battles"
      n_replicas: 2
      port: 8002
      image: "novapokemon/battles:latest"
      serviceName: "battles-service"
      serviceNameHeadless: "battles-service-headless"

    gym:
      name: "gym"
      n_replicas: 2
      port: 8003
      image: "novapokemon/gym:latest"
      serviceName: "gym-service"

    location:
      name: "location"
      n_replicas: 4
      port: 8004
      image: "novapokemon/location:latest"
      serviceName: "location-service"
      databaseName: "locationdb"
      databasePort: 27017

    microtransactions:
      name: "microtransactions"
      n_replicas: 2
      port: 8005
      image: "novapokemon/microtransactions:latest"
      serviceName: "microtransactions-service"
      databaseName: "microtransactionsdb"
      databasePort: 27017

    notifications:
      name: "notifications"
      port: 8006
      n_replicas: 3
      image: "novapokemon/notifications:latest"
      serviceName: "notifications-service"
      databaseName: "notificationsdb"
      databasePort: 27017

    store:
      name: "store"
      n_replicas: 2
      port: 8007
      image: "novapokemon/store:latest"
      serviceName: "store-service"

    trades:
      name: "trades"
      n_replicas: 2
      port: 8008
      image: "novapokemon/trades:latest"
      serviceName: "trades-service"
      serviceNameHeadless: "trades-service-headless"

    trainers:
      image: "novapokemon/trainers:latest"
      name: "trainers"
      port: 8009
      n_replicas: 2
      serviceName: "trainers-service"
      databaseName: "trainersdb"
      databasePort: 27017

trainersdb:
  common:
    mongodbSystemLogVerbosity:
      2
  user: "root"
  mongodbRootPassword: "secretpassword"
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  shards: 1
  shardsvr:
    persistence:
      enabled: false
    dataNode:
      replicas: 1
  mongos:
    replicas: 1
  configsvr:
    persistence:
      enabled: false
    replicas: 1

usersdb:
  common:
    mongodbSystemLogVerbosity:
      2
  user: "root"
  mongodbRootPassword: "secretpassword"
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  shards: 1
  shardsvr:
    persistence:
      enabled: false
    dataNode:
      replicas: 1
  mongos:
    replicas: 1
  configsvr:
    persistence:
      enabled: false
    replicas: 1


microtransactionsdb:
  user: "root"
  mongodbRootPassword: "secretpassword"
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  shards: 1
  shardsvr:
    persistence:
      enabled: false
    dataNode:
      replicas: 1
  mongos:
    replicas: 1
  configsvr:
    persistence:
      enabled: false
    replicas: 1

locationdb:
  user: "root"
  mongodbRootPassword: "secretpassword"
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  shards: 1
  shardsvr:
    persistence:
      enabled: false
    dataNode:
      replicas: 1
  mongos:
    replicas: 1
  configsvr:
    persistence:
      enabled: false
    replicas: 1

notificationsdb:
  user: "root"
  mongodbRootPassword: "secretpassword"
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
  shards: 1
  shardsvr:
    persistence:
      enabled: false
    dataNode:
      replicas: 1
  mongos:
    replicas: 1
  configsvr:
    persistence:
      enabled: false
    replicas: 1

elasticsearch-logging:
  antiAffinity: "soft"
  esJavaOpts: "-Xmx1g -Xms1g"
  replicas: 1
  podSecurityContext:
    fsGroup: 20001
    runAsUser: 5026
  securityContext:
    capabilities:
      drop:
        - ALL
    runAsNonRoot: true
    runAsUser: 5026
  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 5G
  clusterHealthCheckParams: wait_for_status=yellow&timeout=180s

kibana:
  service:
    type: NodePort
    port: 5601
    nodePort: "30001"
    labels: {}
    annotations: {}
    loadBalancerSourceRanges: []
