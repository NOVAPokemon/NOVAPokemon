apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{$.Values.global.services.gym.name}}
spec:
  serviceName: {{$.Values.global.services.gym.serviceNameHeadless}}
  selector:
    matchLabels:
      app: {{$.Values.global.services.gym.name}}
  replicas: {{$.Values.global.services.gym.n_replicas}}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: {{quote $.Values.global.services.gym.port}}
      labels:
        app: {{$.Values.global.services.gym.name}}
    spec:
      initContainers:
        - name: wait-trainers
          image: radial/busyboxplus:curl
          command: ['sh', '-c', "set -x; while [[ $(curl -sw '%{http_code}' 'trainers-service.default.svc.cluster.local:8009/trainers/status' -o /dev/null) -ne 200 ]]; do sleep 15; done"]
        - name: wait-mongo
          image: novapokemon/wait-mongo:latest
          command: ['sh', '-c', "until mongostat -vvvvv --host=novapokemon-gymsdb --port=27017 --username=root --password=secretpassword --authenticationDatabase=admin -n 1 2>&1 | grep successfully ; do echo waiting for my db; sleep 2; done"]
        - name: wait-location
          image: radial/busyboxplus:curl
          command: ['sh', '-c', "set -x; while [[ $(curl -sw '%{http_code}' 'location-0.location-service-headless.default.svc.cluster.local:8004/location/status' -o /dev/null) -ne 200 ]]; do sleep 15; done"]
      containers:
        - name: {{$.Values.global.services.gym.name}}
          image: {{$.Values.global.services.gym.image}}
          command: ["sh", "-c", "./executable -l -d"]
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          ports:
            - containerPort: {{$.Values.global.services.gym.port}}
          envFrom:
            - configMapRef:
                name: {{$.Values.global.api_configmap.name}}
          env:
            - name: MONGODB_URL
              value: "mongodb://{{$.Values.global.database.user}}:{{$.Values.global.database.mongodbRootPassword}}@{{$.Values.global.database.prefix}}-{{$.Values.global.services.gym.databaseName}}:{{$.Values.global.services.location.databasePort}}"
            - name: "HEADLESS_SERVICE_NAME"
              value: {{$.Values.global.services.gym.serviceNameHeadless}}
      nodeSelector:
        serversnode: "true"